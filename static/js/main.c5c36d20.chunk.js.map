{"version":3,"sources":["CrudApp/uniqid.js","CrudApp/Button/Button.jsx","CrudApp/NoteItem/NoteItem.jsx","CrudApp/NotesList/NotesList.jsx","CrudApp/Functions/serverRequest.js","CrudApp/CrudApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["uniqId","require","Button","id","this","props","className","onClick","handleClick","children","React","Component","NoteItem","content","NotesList","serverRequest","method","a","obj","fetch","process","headers","body","JSON","stringify","response","json","console","log","CrudApp","state","textAreaValue","notes","onDeleteNoteClick","bind","updateNotesButton","handleTextAreaChange","handleTextAreaValue","addNewNote","addNoteButton","result","setState","e","noteId","target","componentUpdate","value","key","preventDefault","trim","blur","map","elem","htmlFor","name","onChange","onKeyDown","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5c36d20.chunk.js","sourcesContent":["export const uniqId = require('uniqid');\n","import React from 'react';\n\nexport class Button extends React.Component {\n    render() {\n        return (\n            <button\n                id={this.props.id}\n                className={this.props.className}\n                onClick={this.props.handleClick}>\n                {this.props.children}\n            </button>\n        )\n    }\n}\n","import React from 'react';\nimport {Button} from '../Button/Button';\n\nexport class NoteItem extends React.Component {\n    render() {\n        return (\n            <li className={this.props.className}>\n                <Button id={this.props.id} className={'DeleteNoteButton'} handleClick={this.props.handleClick}>&#10060;</Button>\n                <p className={'NoteItemText'}>{this.props.content}</p>\n            </li>\n        )\n    }\n}\n","import React from 'react';\n\nexport class NotesList extends React.Component {\n    render() {\n        return (\n            <ul className={this.props.className}>{this.props.children}</ul>\n        )\n    }\n}\n","export async function serverRequest(method, id= '', obj= null) {\n    try {\n        if (method === 'DELETE') {\n            await fetch(`${process.env.REACT_APP_CURRENCY_URL}/${id}`, {\n                method: method,\n            });\n            return;\n        }\n        if (method === 'POST') {\n            await fetch(process.env.REACT_APP_CURRENCY_URL, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                },\n                body: JSON.stringify(obj),\n            });\n            return;\n        }\n        let response = await fetch(process.env.REACT_APP_CURRENCY_URL);\n        return await response.json();\n    } catch(e) {\n        console.log(e);\n    }\n}\n","import React from 'react';\nimport {uniqId} from './uniqid';\nimport {Button} from './Button/Button';\nimport {NoteItem} from './NoteItem/NoteItem';\nimport {NotesList} from './NotesList/NotesList';\nimport {serverRequest} from './Functions/serverRequest';\nimport './css/CrudApp.css';\n\nexport class CrudApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textAreaValue: '',\n            notes: [],\n        }\n        this.onDeleteNoteClick = this.onDeleteNoteClick.bind(this);\n        this.updateNotesButton = this.updateNotesButton.bind(this);\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n        this.handleTextAreaValue = this.handleTextAreaValue.bind(this);\n        this.addNewNote = this.addNewNote.bind(this);\n        this.addNoteButton = this.addNoteButton.bind(this);\n    }\n\n    async componentDidMount() {\n        const result = await serverRequest('GET');\n        this.setState({notes: result});\n    }\n\n    async componentUpdate() {\n        const result = await serverRequest('GET');\n        this.setState({notes: result});\n    }\n\n    async onDeleteNoteClick(e) {\n        const noteId = e.target.id;\n        await serverRequest('DELETE', noteId, null);\n        await this.componentUpdate();\n    }\n\n    async updateNotesButton() {\n        await this.componentUpdate();\n    }\n\n    handleTextAreaChange(e) {\n        this.setState({textAreaValue: e.target.value});\n    }\n\n    async handleTextAreaValue(e) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            if (this.state.textAreaValue.trim() === '') {\n                this.setState({textAreaValue: ''});\n                return;\n            }\n            await this.addNewNote();\n            e.target.blur();\n        }\n    }\n\n    async addNewNote() {\n        const obj = {\n            id: uniqId(),\n            content: this.state.textAreaValue.trim(),\n        };\n        await serverRequest('POST', null, obj)\n        await this.componentUpdate();\n        this.setState({textAreaValue: ''});\n    }\n\n    async addNoteButton() {\n        if (this.state.textAreaValue === '') return;\n        await this.addNewNote();\n    }\n\n    render() {\n        return (\n            <div className={'CrudApp'}>\n                <section className={'Content'}>\n                    <header className={'CrudAppHeader'}>\n                        <h2 className={'CrudHeader'}>{'Note'}</h2>\n                        <Button className={'UpdateNotesButton'} handleClick={this.updateNotesButton}>&#128472;</Button>\n                    </header>\n                    <NotesList className={'NotesList'}>\n                        {this.state.notes.map((elem) =>\n                            <NoteItem key={elem.id} className={'NoteItem'} id={elem.id}\n                                      handleClick={this.onDeleteNoteClick} content={elem.content}/>\n                        )}\n                    </NotesList>\n                </section>\n                <div className={'TextAreaBlock'}>\n                    <label htmlFor={'noteTextArea'}>{'New Note'}</label>\n                    <textarea\n                        className={'NoteTextArea'}\n                        name={'NoteTextArea'} id={'noteTextArea'}\n                        value={this.state.textAreaValue}\n                        onChange={this.handleTextAreaChange}\n                        onKeyDown={this.handleTextAreaValue}\n                        required={true}/>\n                    <Button className={'AddNoteButton'} handleClick={this.addNoteButton}>&#10148;</Button>\n                </div>\n            </div>\n        )\n    }\n\n}\n","import './App.css';\nimport {CrudApp} from './CrudApp/CrudApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CrudApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}